多筆倉位同時標記為「⚠️ 逆勢 | 進場理由❌ 已失效」，但系統未自動平倉。 

日誌解讀
* 「逆勢」：倉位方向與當前市場趨勢相反（如市場下跌時持有多倉）
* 「進場理由已失效」：原始開倉的技術條件（如 Order Block、流動性區）已被價格突破或時間衰減

為什麼沒平倉？
根據您提供的 v3.17 架構，PositionMonitor24x7 應在檢測到此狀態時 自動平倉，但實際未執行，可能原因：

1. 監控邏輯僅「記錄」未「決策」
# ❌ 錯誤：只輸出日誌，無平倉指令
if is_counter_trend and entry_reason_expired:
    logger.warning("⚠️ 逆勢 | 進場理由❌ 已失效")

1. 缺少明確的出場規則 您的出場邏輯目前聚焦於：
    * 止盈/止損觸發
    * 100% 虧損熔斷
    * 趨勢持續性判斷 但未包含「進場邏輯失效」的處理
2. 信心度未動態更新 倉位開立後，模型未重新評估「在當前市場下，此倉位是否仍合理」
✅ 正確處理方式：立即修復監控邏輯，而非人工介入
修復方案（三步驟）
步驟 1：在 PositionMonitor24x7 中加入「進場失效」平倉規則
# src/core/position_monitor_24x7.py
async def _evaluate_exit_conditions(self, position: Position, current_price: float) -> Decision:
    # ... [原有邏輯] ...
    
    # 🔴 新增：進場理由失效 → 立即平倉
    if self._is_entry_reason_expired(position, current_price):
        return Decision("CLOSE", "ENTRY_REASON_EXPIRED")
    
    # 🔴 新增：逆勢 + 無反彈信號 → 平倉
    if self._is_counter_trend(position) and not self._has_rebound_signal(position):
        return Decision("CLOSE", "COUNTER_TREND_NO_REBOUND")
    
    return Decision("HOLD", "MONITORING")
步驟 2：實現失效檢測函數

def _is_entry_reason_expired(self, position: Position, current_price: float) -> bool:
    """檢測進場理由是否失效"""
    # 1. Order Block 被突破
    if position.entry_reason == "order_block":
        ob_price = position.entry_price
        # 若價格遠離 OB 區域（>2%）
        if abs(current_price - ob_price) / ob_price > 0.02:
            return True
    
    # 2. 流動性區被消耗
    if position.entry_reason == "liquidity_zone":
        # 檢查訂單簿深度是否消失
        liquidity_score = self._get_current_liquidity(position.symbol)
        return liquidity_score < 0.3  # 低於 30% 視為失效
    
    # 3. 時間衰減（>48 小時）
    if time.time() - position.created_at > 172800:  # 48 小時
        return True
    
    return False

步驟 3：將此事件納入訓練數據

# 平倉時記錄原因
trade_record = {
    "symbol": position.symbol,
    "close_reason": "ENTRY_REASON_EXPIRED",  # 關鍵標籤
    "was_counter_trend": True,
    "liquidity_at_close": current_liquidity,
    # ... 其他特徵
}
# 用於訓練模型「何時應放棄無效倉位」
長期改進：讓模型學會「自我修正」
1. 在 SelfLearningTrader 中加入「倉位健康度」評估 每 10 秒重新計算： health_score = f(趨勢一致性, 進場理由有效性, 流動性) 當 health_score < 0.3 時主動減倉
2. 虛擬倉位模擬「提前平倉」結果 對比「持有 vs 提前平倉」的 PnL，訓練模型何時該果斷離場

